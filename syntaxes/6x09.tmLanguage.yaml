# texmate language for 6x09 assembly
scopeName: source.asm.6x09
filetypes: [a, asm]

patterns:
  # Only comment on line
  - include: '#linecomment'

  # Special case for select pseudo ops
  - name: meta.line.asm6x09
    match: '^[ \t]+(nam|ttl|use|opt|include(?:bin)?|error|warning)[ \t]+(.*)'
    captures:
      '1': # opcode column
        name: keyword.other.misc.asm6x09
      '2': # text column
        name: string.unquoted.asm8x09

  # Symbol and comment on line
  - name: meta.line.asm6x09
    match: '^([^ \t*;]*)(?:[ \t]+((?:[*]\s|;).*))'
    captures:
      '1': # label column
        name: meta.label.asm6x09
        patterns:
          - include: '#symbol'
      '2': # comment column
        name: comment.asm6x09

  # Symbol?, operand-free opcode and comment on line
  - name: meta.line.asm6x09
    match: '(?i)^([^ \t*;]*)(?:[ \t]+(abx|as[lr][abd]|clr[abdefw]|com[abdefw]|daa|dec[abdefw]|inc[abdefw]|ls[lr][abdw]|mul|neg[abd]|nop|psh[su]w|pul[su]w|ro[lr][abdw]|rt[is]|sexw?|sync|swi[23]?|tst[abdefw]|macro|struct))(?:[ \t]+(.*))'
    captures:
      '1': # label column
        name: meta.label.asm6x09
        patterns:
          - include: '#symbol'
      '2': # opcode column
        name: meta.opcode
        patterns:
          - include: '#opcode'
          - include: '#pseudo'
          - include: '#symbol'
      '3': # comment column
        name: comment.asm6x09

  # Symbol?, opcode, operand? and comment on line
  - name: meta.line.asm6x09
    match: '^([^ \t*;]*)(?:[ \t]+([^ \t]+))(?:[ \t]+((?:[*]\s|;).*))'
    captures:
      '1': # label column
        name: meta.label.asm6x09
        patterns:
          - include: '#symbol'
      '2': # opcode column
        name: meta.opcode
        patterns:
          - include: '#opcode'
          - include: '#pseudo'
          - include: '#symbol'
      '3': # comment column
        name: meta.comment.asm6x09
        patterns:
          - name: comment.asm6x09
            match: '^([*]\s|;).*$'
  
  # Symbol?, opcode, operand? and comment on line
  - name: meta.line.asm6x09
    match: '^([^ \t*;]*)(?:[ \t]+([^ \t]+))?(?:[ \t]+((?:"[^"]*"|/[^/]*/|''[^'']*''|[^ \t]*)))?(?:[ \t]+(.*))?'
    captures:
      '1': # label column
        name: meta.label.asm6x09
        patterns:
          - include: '#symbol'

      '2': # opcode column
        name: meta.opcode
        patterns:
          - include: '#opcode'
          - include: '#pseudo'
          - include: '#symbol'

      '3': # operand column
        name: meta.operand
        patterns:
          - include: '#symbol'
          - include: '#string'
          - include: '#constant'

      '4': # comment column
        name: comment.asm6x09

repository:
  linecomment:
    patterns:
      - name: comment.line.asterisk.asm6x09
        match: '(^|\s+)[*](\s|[*]).*'

      - name: comment.line.asterisk.asm6x09
        match: '(^|\s+)[;].*'
  symbol:
    patterns:
      - name: variable.name.asm6x09
        match: '(?i)[a-z._][a-z0-9.$_@?]*'
  opcode:
    patterns:
      - name: keyword.other.opcode.logical.asm6x09
        match: (?i)\b(and(a|b|cc)|clr[ab]?|eor[ab]|or(a|b|cc))\b

      - name: keyword.other.opcode.arithmetic.asm6x09
        match: (?i)\b(abx|adc[ab]|add[abd]|com[ab]?|dec[ab]?|daa|inc[ab]?|mul|neg[ab]?|sbc[ab]|sex|sub[abd])\b

      - name: keyword.other.opcode.branch.asm6x09
        match: (?i)\b(l?b(c[cs]|eq|g[et]|h[is]|l[eost]|mi|ne|pl|ra|sr|v[cs])|rts)\b

      - name: keyword.other.opcode.comparison.asm6x09
        match: (?i)\b(bit[ab]|cmp[abdsuxy]|tst[ab]?)\b

      - name: keyword.other.opcode.jump.asm6x09
        match: (?i)\b(j(mp|sr))\b

      - name: keyword.other.opcode.interrupt.asm6x09
        match: (?i)\b(cwai|rti|swi[23]?|sync)\b

      - name: keyword.other.opcode.shiftrotate.asm6x09
        match: (?i)\b(as[lr][ab]?|ls[lr][ab]?|ro[lr][ab]?)\b

      - name: keyword.other.opcode.transfer.asm6x09
        match: (?i)\b(exg|ld[abdsuxy]|lea[suxy]|psh[su]|pul[su]|st[abdsuxy]|tfr)\b

      - name: keyword.other.opcode.nop.asm6x09
        match: (?i)\b(nop|l?brn)\b

      - name: keyword.other.opcode.6309.asm6x09
        match: (?i)\b(adc[defr]|add[rw]|[aeo]im|and[dr]|as[lr]d|bi?and|bi?eor|bi?or|bit(d|md)|clr[defw]|cmp[efrw])\b

      - name: keyword.other.opcode.6309.asm6x09
        match: (?i)\b(com[defw]|dec[defw]|div[dq]|eor[dr]|inc[defw]|ld([efqw]|bt|md)|lsld|lsr[dw]|muld|negd|or[dr])\b

      - name: keyword.other.opcode.6309.asm6x09
        match: (?i)\b(psh[su]w|pul[su]w|ro[lr][dw]|sbc[dr]|sexw|st([efqw]|bt)|sub[rw]|tfm|tim|tst[defw])\b
  pseudo:
    patterns:
      - name: entity.name.type.data.asm6x09
        match: (?i)\b(f[cdq]b|fc[cns]|[zr]m[dbq]|includebin|fill)\b

      - name: storage.modifier.asm6x09
        match: (?i)\b(org|equ|set(dp)?|align)\b
      
      - name: invalid.deprecated.asm6x09
        match: (?i)\b(reorg)\b

      - name: keyword.control.conditional.asm6x09
        match: (?i)\b(if(eq|ne|g[te]|l[te]|n?def|pragma|p1)|else|end[cmrs]|macro|rept|struct)\b

      - name: support.function.os9.asm6x09
        match: (?i)\b(os9|e?mod)\b

      - name: keyword.other.misc.asm6x09
        match: (?i)\b(include|use|end|error|warning|fail|opt|nam|ttl|pag|spc)\b

      - name: keyword.control.pragma.asm6x09
        match: '(?i)(?<=[ \t])([*]?pragma|[*]pragma(push|pop)?)\b'
  string:
    patterns:
      - name: string.quoted.double.asm6x09
        match: '"[^"]*"'

      - name: string.quoted.other.asm6x09
        match: '/[^/]*/'

      - name: string.quoted.single.asm6x09
        match: '''[^'']*'''
  constant:
    patterns:
      - name: constant.character.asm6x09
        match: '(''.)|("..)'

      - name: constant.numeric.hex.asm6x09
        match: (?<![a-zA-Z_.])((\$|(0[xX]))[0-9A-Fa-f]*\b)|([0-9][0-9A-Fa-f]*H\b)

      - name: constant.numeric.octal.asm6x09
        match: (?<![a-zA-Z_.])(@[0-7]+)|([0-7]+[qQoO])\b

      - name: constant.numeric.binary.asm6x09
        match: (?<![a-zA-Z_.])(%[01]+)|([01]+[bB])\b

      - name: constant.numeric.integer.asm6x09
        match: \b(?<![a-zA-Z_.])&?[0-9]+\b
